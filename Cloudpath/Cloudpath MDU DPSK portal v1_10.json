[{"id":"03cd6ad3a1606b21","type":"tab","label":"Cloudpath DPSK Portal","disabled":false,"info":""},{"id":"d71a4be8e4e9cf79","type":"template","z":"03cd6ad3a1606b21","name":"Confirm & Pay","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style>\nh1 {font-family: \"Arial\";font-size: 23px;font-weight: bold;}\nh2 {font-family: \"Arial\";font-size: 18px;font-weight: normal;}\n.button {font-family: \"Arial\";align: left; font-size: 15px;font-weight: bold;}\n</style>\n</head>\n<body>\n    <h1>Continue to payment for the following service selection:</h1>\n    <h2>Service registration E-Mail:<b> {{flow.userEmail}}</b></h2>\n    <h2>Term:<b> {{flow.term}}</b></h2>\n    <h2>Service:<b> {{flow.currServiceLevel}}</b></h2>\n    <h2>The selected service cost is <b>Â£{{flow.serviceCost}}</b></h2>\n    <br>\n    <h2><font color = red>This is a placeholder for a step that will popup a payment link for the selected service level when Continue is clicked.</font colour></font></h2>\n    <br>\n    <a href=\"http://194.60.94.30:1880/CreateDPSK\"><button class=\"button\">CONTINUE</button>\n    \n</body>\n</html>","output":"str","x":1260,"y":1080,"wires":[["e301752007300fd4"]]},{"id":"92d92481f21e93f9","type":"function","z":"03cd6ad3a1606b21","name":"Set variables & process data","func":"//Setup flow variables based on user input\nflow.set(\"term\", msg.payload.term);\nflow.set(\"currServiceLevel\", msg.payload.currServiceLevel);\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\n//Set monthly payment units here for different service levels / tenant types.\nvar bronzePrivate = 20;\nvar bronzeAffordable = 15;\n\nvar silverPrivate = 28;\nvar silverAffordable = 24;\n\nvar goldPrivate = 35;\nvar goldAffordable = 30;\n\n//Extrapolate payment for service selection and resident type.\n//serviceLevel defines the Cloudpath bandwidth policy that will be tied to the DPSK.\nvar servicePerMonth = {};\n//Set BRONZE service level\nif (msg.payload.currServiceLevel == \"Browsing, E-Mail & Standard video quality\" && flow.get(\"Resident\") === \"Private\") {\n    servicePerMonth = bronzePrivate;\n    flow.set(\"serviceLevel\", \"PRIVATE-BRONZE\");\n}\nif (msg.payload.currServiceLevel == \"Browsing, E-Mail & Standard video quality\" && flow.get(\"Resident\") === \"Affordable\") {\n    servicePerMonth = bronzeAffordable;\n    flow.set(\"serviceLevel\", \"AFFORDABLE-BRONZE\");\n}\n//Set SILVER service level\nif (msg.payload.currServiceLevel == \"Browsing, E-Mail & HD video quality\" && flow.get(\"Resident\") === \"Private\") {\n    servicePerMonth = silverPrivate;\n    flow.set(\"serviceLevel\", \"PRIVATE-SILVER\");\n}\nif (msg.payload.currServiceLevel == \"Browsing, E-Mail & HD video quality\" && flow.get(\"Resident\") === \"Affordable\") {\n    servicePerMonth = silverAffordable;\n    flow.set(\"serviceLevel\", \"AFFORDABLE-SILVER\");\n}\n//Set GOLD service level\nif (msg.payload.currServiceLevel == \"Uncapped service\" && flow.get(\"Resident\") === \"Private\") {\n    servicePerMonth = goldPrivate;\n    flow.set(\"serviceLevel\", \"PRIVATE-GOLD\");\n}\nif (msg.payload.currServiceLevel == \"Uncapped service\" && flow.get(\"Resident\") === \"Affordable\") {\n    servicePerMonth = goldAffordable;\n    flow.set(\"serviceLevel\", \"AFFORDABLE-GOLD\");\n}\n\n//Extrapolate service term in months\nvar serviceTerm = {};\n//Set 1 month service term\nif (msg.payload.term == \"1 month\") {\n    serviceTerm = 1;\n    node.send([newMsg,null,null]);\n    node.done();\n}\n//Set 6 month service term\nelse if (msg.payload.term == \"6 months\") {\n    serviceTerm = 6;\n    node.send([null,newMsg,null]);\n    node.done();\n}\nelse {\n//Set 12 month service term\n    serviceTerm = 12;\n    node.send([null,null,newMsg]);\n    node.done();\n}\n\n//Calculate cost based on term and service\nvar calcCost = {};\ncalcCost = servicePerMonth * serviceTerm\nflow.set(\"serviceCost\", calcCost);\n\nreturn;","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":1060,"wires":[["5f8e4047a1eac3f9"],["a98493e5df04c920"],["d2b190c089157d3d"]],"outputLabels":["+ 1 month","+ 6 months","+ 1 year"]},{"id":"d3305e53f23108d0","type":"inject","z":"03cd6ad3a1606b21","name":"Settings","props":[{"p":"payload"}],"repeat":"180","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"{\"System\":{\"version\":\"Version 1.10\",\"program\":\"Cloudpath DPSK onboarding & management\",\"author\":\"Eddie Felmer\",\"copyright\":\"Eddie Felmer / Ruckus\",\"LocalTime\":\"en-GB\"},\"SystemPaths\":{\"cloudpath_Fqdn\":\"enter your Cloudapth FQDN here\",\"cloudpath_DpskPool\":\"enter your DPSK Pool GUID here\",\"wifi_Network\":\"enter your MDU Wi-Fi SSID here\",\"login_Name\":\"enter your Cloudpath login name here\",\"login_Password\":\"enter your Cloudpath password name here\"},\"EMAIL\":{\"EMAILServer\":\"<entered in the EMail node>\",\"EMAILPort\":\"<entered in the EMail node>\",\"EMAILAccount\":\"<entered in the EMail node>\",\"EMAILPassword\":\"<entered in the EMail node>\",\"EMAILtopic\":\"<aka the Subject - entered in the Send E-Mail & SMS Alerts node>\",\"EMAILfrom\":\"enter From email address here (might not work depending on the email SMTP proxy used\",\"EMAILcc\":\"\"}}","payloadType":"json","x":120,"y":100,"wires":[["3a65c8b895dbe1df"]]},{"id":"3b1b067dc03a8dba","type":"http request","z":"03cd6ad3a1606b21","name":"https POST","method":"POST","ret":"obj","paytoqs":"ignore","url":"","tls":"d8d96dbf.ae322","persist":false,"proxy":"","authType":"","x":690,"y":100,"wires":[["72f99a3235cfd3bf"]]},{"id":"3a65c8b895dbe1df","type":"function","z":"03cd6ad3a1606b21","name":"Get Initial Token & set flow variables","func":"//Set general variables\nvar Settings = msg.payload;\nflow.set(\"Settings\", Settings);\nflow.set(\"cloudpathAddress\", Settings.SystemPaths.cloudpath_Fqdn);\nflow.set(\"cloudpathDpskPool\", Settings.SystemPaths.cloudpath_DpskPool);\nflow.set(\"loginName\", Settings.SystemPaths.login_Name);\nflow.set(\"loginPassword\", Settings.SystemPaths.login_Password);\nflow.set(\"wifiNetwork\", Settings.SystemPaths.wifi_Network); //Gets the name of the Tenant Wi-Fi network\n\n//Get a new service token\nmsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/token\");\n\nmsg.headers = {};\nmsg.headers[\"Content-Type\"]=\"application/json;charset=UTF-8\";\n\nmsg.payload = {\n    \"userName\": flow.get(\"loginName\"),\n    \"password\": flow.get(\"loginPassword\")\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":100,"wires":[["3b1b067dc03a8dba"]]},{"id":"72f99a3235cfd3bf","type":"function","z":"03cd6ad3a1606b21","name":"Save New Token","func":"var responseCode = msg.statusCode\n\n//Check that Cloudpath HTTP connection and login was succesful\n//If not send debug warning to console and debug\nif (responseCode != 201) {\n    node.warn([\"Expected HTTP response code 200 from Cloudpath, instead it received HTTP response code:\", responseCode]);\nreturn;\n}\n\nelse {\n    flow.set(\"cloudpathToken\", msg.payload.token);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":100,"wires":[[]]},{"id":"703ea2332b376ed3","type":"template","z":"03cd6ad3a1606b21","name":"DPSK Service Form","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style type=\"text/css\">\n#main {font-family: \"Arial\";border:1px dotted #666;text-align:left;}\n#main h2 {text-align:center;padding:.4em 3em 0em;}\n#main p {text-align:center;padding:.1em 0em 0em;}\n#my-form #align {box-sizing:border-box;width:96%;text-align:center;margin:0 2%;padding:0em;}\n#my-form .data-entry {font-family: \"Arial\";font-size: 96%; padding:.5em 0.5%;font-weight: bold;}\n#my-form textarea {padding:.1em 8%;}\n#my-form p {margin:.1em 0;text-align:center}\n#my-form select {margin-bottom:1em;font-size:96%;padding:.1em .5em;}\n#my-form .button {margin:0.7em;font-weight: bold;}\n</style>\n</head>\n\n<div id=\"main\">\n<h2>Wi-Fi Service Selection</h2>\n<form id=\"my-form\" action=\"http://194.60.94.30:1880/serviceLevelForm?\" method=\"post\">\n<div id=\"align\">\n\n<p>Service Term (Choose one)</p>\n<select name=\"term\" size=\"3\" required>\n<option value=\"1 month\">1 month</option>\n<option value=\"6 months\">6 months</option>\n<option value=\"1 year\">1 year</option>\n</select><br />\n\n<p>Service Level (Choose one)</p>\n<select name=\"currServiceLevel\" size=\"3\" required>\n<option value=\"Browsing, E-Mail & Standard video quality\">Browsing, E-Mail & Standard video quality </option>\n<option value=\"Browsing, E-Mail & HD video quality\">Browsing, E-Mail & HD video quality </option>\n<option value=\"Uncapped service\">Uncapped service</option>\n</select><br /><br />\n\n<span><input type=\"reset\" class=\"button\" value=\"RESET\" />\n<input type=\"submit\" class=button value=\"SUBMIT\" /></span><br />\n\n</div><!--end div align-->\n</form>\n</div><!--end div main-->","output":"str","x":400,"y":980,"wires":[["5072e1853571f684"]]},{"id":"a4a7f34b65dd6c4f","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/serviceLevelForm","method":"get","upload":false,"swaggerDoc":"","x":140,"y":980,"wires":[["703ea2332b376ed3"]]},{"id":"a5a53aceb16953ca","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/serviceLevelForm","method":"post","upload":false,"swaggerDoc":"","x":150,"y":1060,"wires":[["92d92481f21e93f9"]]},{"id":"5072e1853571f684","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{},"x":620,"y":980,"wires":[]},{"id":"90918c5ab2ce7b62","type":"function","z":"03cd6ad3a1606b21","name":"Create DPSK","func":"var newMsg = {};\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nnewMsg.headers = {};\nnewMsg.headers[\"Content-Type\"]=\"application/json;charset=UTF-8\";\nnewMsg.headers[\"Authorization\"]=flow.get(\"cloudpathToken\");\n\nnewMsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/dpskPools/\"+flow.get(\"cloudpathDpskPool\")+\"/dpsks/\");\n\n//Parameters to create a new DPSK\nnewMsg.payload = {\n    \"name\":flow.get(\"serviceLevel\"),\n    \"thirdPartyId\":flow.get(\"userEmail\"),\n    \"status\":\"ACTIVE\",\n    \"passphrase\":\"\",\n    \"ssidList\":[flow.get(\"wifiNetwork\")],\n    \"expirationDateTime\":flow.get(\"dpskExpiry\"),\n    \"useExpirationDate\": true,\n    \"useDeviceCountLimit\":false,\n    \"vlanid\":flow.get(\"vlan\"),\n    \"overrideReauthentication\":86400\n}\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":1260,"wires":[["3d9ff3e274e70448"]]},{"id":"155cc30aa87e962f","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{"Connection-Timeout":"\"Connection-Timeout\" \":\" 240"},"x":1820,"y":1400,"wires":[]},{"id":"441bbba0cb87a903","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/CreateDPSK","method":"get","upload":false,"swaggerDoc":"","x":130,"y":1300,"wires":[["0abc079539b3f8fe"]]},{"id":"3f3ecdb79214ec32","type":"template","z":"03cd6ad3a1606b21","name":"Display Confirmation","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{{{payload}}}","output":"str","x":1620,"y":1400,"wires":[["155cc30aa87e962f"]]},{"id":"3d9ff3e274e70448","type":"http request","z":"03cd6ad3a1606b21","name":"http POST","method":"POST","ret":"obj","paytoqs":"ignore","url":"","tls":"d8d96dbf.ae322","persist":false,"proxy":"","authType":"","x":770,"y":1260,"wires":[["19df842a0c965e19"]]},{"id":"19df842a0c965e19","type":"function","z":"03cd6ad3a1606b21","name":"DPSK Success","func":"var responseCode = msg.statusCode\n\n//Check that Cloudpath DPSK creation was succcesful\n//If not send debug warning to console and debug\nif (responseCode != 200 && responseCode != 201) {\n    node.warn([\"Expected HTTP response code 200 or 201 from Cloudpath, instead it received HTTP response code:\", responseCode]);\nreturn;\n}\n\nvar newMsg = {};\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\n//Set flow variables with the DPSK Passhprase & GUID\nflow.set(\"dpskPassphrase\", msg.payload.passphrase);\nflow.set(\"dpskGuid\", msg.payload.guid);\n\n//Setup QR code with the Tenant Wi-Fi SSID and users DPSK\nnewMsg.qrcodeinput = \"WIFI:T:WPA;S:\"+flow.get(\"wifiNetwork\")+\";P:\"+flow.get(\"dpskPassphrase\")+\";\";\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":1260,"wires":[["bb9507caf8a6047a"]]},{"id":"2426ca0f32f944c9","type":"function","z":"03cd6ad3a1606b21","name":"Check for existing Active DPSKs by email address","func":"//Setup request to see if an Active DPSK already exists for the user\nvar newMsg = {};\nnewMsg.headers = {};\nnewMsg.headers[\"Content-Type\"]=\"application/json;charset=UTF-8\";\nnewMsg.headers[\"Authorization\"]=flow.get(\"cloudpathToken\");\n\n//Set the URL filter to query by the user email address and state = ACTIVE\nnewMsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/dpskPools/\"+flow.get(\"cloudpathDpskPool\")+\"/dpsks/?filter=thirdPartyId(like:\"+flow.get(\"userEmail\")+\"&filter=status(eq:ACTIVE)\");\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nnewMsg.payload = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":480,"wires":[["6e45033609ce3f71"]]},{"id":"6e45033609ce3f71","type":"http request","z":"03cd6ad3a1606b21","name":"http GET","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"d8d96dbf.ae322","persist":false,"proxy":"","authType":"","x":1460,"y":480,"wires":[["18f25a46c904d79b"]]},{"id":"18f25a46c904d79b","type":"function","z":"03cd6ad3a1606b21","name":"Existing DPSK?","func":"//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\n//Check if response contains an array which indicates an existing Active DPSK for the User\n//If it does then display Update DPSK option & set the retrieved DPSK parameters\nif (msg.payload.page.totalCount > 0) {\n    flow.set(\"dpskGuid\", msg.payload.contents[0].guid);\n    flow.set(\"serviceLevel\", msg.payload.contents[0].name);\n    flow.set(\"dpskPassphrase\", msg.payload.contents[0].passphrase);\n    flow.set(\"dpskExpiry\", msg.payload.contents[0].expirationDateTime);\n    flow.set(\"existingDPSK\", true);\n    var baseStr = msg.payload.contents[0].name\n    var str = new RegExp(baseStr, \"g\");\n        if (/-BRONZE/.test(str)) {\n            flow.set(\"currServiceLevel\", \"Browsing, E-Mail & Standard video quality\");\n    }\n        if (/-SILVER/.test(str)) {\n            flow.set(\"currServiceLevel\", \"Browsing, E-Mail & HD video quality\");\n    }\n        if (/-GOLD/.test(str)) {\n        flow.set(\"currServiceLevel\", \"Uncapped service\");\n    }\nreturn [newMsg,null];\n}\nflow.set(\"existingDPSKaction\", \"create\");\nreturn [null,newMsg];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1040,"y":580,"wires":[["e2e5ebdba870c56b"],["8eef0646d0833826"]],"outputLabels":["Existing Active DPSK Exists","No existing Active DPSK"]},{"id":"c6bd3e19b092500f","type":"template","z":"03cd6ad3a1606b21","name":"Existing DPSK Options","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!-- Give option to replace or update service on existing DPSK-->\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style>\nh1 {font-family: \"Arial\";font-size: 23px;font-weight: bold;}\nh2 {font-family: \"Arial\";font-size: 18px;font-weight: normal;}\n.button {font-family: \"Arial\";align: center; font-size: 15px; font-weight: bold; margin: 0px 20px; display: inline-block;}\n</style>\n\n</head>\n<body>\n    <h2>There is already an active Wi-Fi Access Key (passphrase) of <b><font color=red>{{flow.dpskPassphrase}}</font color> </b>registered to <b>{{flow.userEmail}}</b></h2>\n    <h2>The associated Service subscription is <b>{{flow.currServiceLevel}}</b> and it is due to expire on <b>{{flow.currExpiry}}</b></h2>\n    <br>\n    <h2>Click <b>UPDATE</b> to update the parameters of the existing Access Key with a new Service selection. Use this option when Renewing your Wi-Fi Service subscription. Devices will continue to use the current Access Key.</h2>\n    <h2>Click <b>DELETE</b> to delete the existing Access Key & terminate your service.</h2>\n    <h2>Click <b>REPLACE</b> to replace the existing Access Key with a new one<b>*</b>, keeping the existing Service subscription.</h2>\n        <h2><b>*</b><i>All currently connected devices will need to be re-connected to the Wi-Fi network <b>{{flow.wifiNetwork}}</b> with the new Access Key.</i></h2>\n    <br>\n    <form =\"form\" action=\"http://194.60.94.30:1880/UpdateDPSK?\" method=\"post\">\n    <input type=\"submit\" class=\"button\" value=\"UPDATE\" />\n    <input type=\"submit\" formaction=\"http://194.60.94.30:1880/DeleteDPSK?\" class=\"button\" value=\"DELETE\" method=\"post\">\n    <input type=\"submit\" formaction=\"http://194.60.94.30:1880/ReplaceDPSK?\" class=\"button\" value=\"REPLACE\" method=\"post\">\n</form>\n</body>\n</html>","output":"str","x":400,"y":680,"wires":[["a440345bfbe61c0d"]]},{"id":"a53877a138d41cf9","type":"template","z":"03cd6ad3a1606b21","name":"AD Login Form","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style type=\"text/css\">\n#main {font-family: \"Arial\";border:1px dotted #666;text-align:left;}\n#main h2 {text-align:center;padding:.4em 3em 0em;}\n#main p {text-align:center;padding:.1em 0em 0em;}\n#login-form #align {box-sizing:border-box;width:96%;text-align:center;margin:0 2%;padding:0em;}\n#login-form .data-entry {font-family: \"Arial\";font-size: 96%; padding:.5em 0.5%;font-weight: bold;}\n#login-form textarea {padding:.1em 8%;}\n#login-form p {margin:.1em 0;text-align:center}\n#login-form select {margin-bottom:1em;font-size:96%;padding:.1em .5em;}\n#login-form .button {margin:0.7em;font-weight: bold;}\n</style>\n</head>\n\n<div id=\"main\">\n<h2>Tenant Login</h2>\n<form id=\"login-form\" action=\"http://194.60.94.30:1880/Login?\" method=\"post\">\n<div id=\"align\">\n\n<label for=\"loginname\">Login name</label><br />\n<span><input type=\"text\" name=\"loginname\" id=\"loginname\" placeholder=\"name@ruckuslabs.co.uk\" maxlength=\"40\" class=\"data-entry\" autofocus required /></span><br /><br />\n\n<label for=\"password\">Password</label><br />\n<span><input type=\"password\" name=\"password\" id=\"password\" maxlength=\"20\" class=\"data-entry\" required /></span><br /><br />\n\n\n<span><input type=\"reset\" class=\"button\" value=\"RESET\" />\n<input type=\"submit\" class=button value=\"LOGIN\" /></span><br />\n\n</div><!--end div align-->\n</form>\n</div><!--end div main-->","output":"str","x":340,"y":340,"wires":[["6502cd5188dbeb49"]]},{"id":"9f234097b3e851ce","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/Login","method":"get","upload":false,"swaggerDoc":"","x":100,"y":340,"wires":[["a53877a138d41cf9"]]},{"id":"94469c0d2f30e5ab","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/Login","method":"post","upload":false,"swaggerDoc":"","x":110,"y":440,"wires":[["f2e80b8d53aee135"]]},{"id":"6502cd5188dbeb49","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{"Connection-Timeout":"\"Connection-Timeout\" \":\" 240"},"x":540,"y":340,"wires":[]},{"id":"7c517738d1e44eb9","type":"function","z":"03cd6ad3a1606b21","name":"Setup AD User Query","func":"//Setup request to see to pull attributes form AD to see if an Active DPSK already exists for the user\nvar newMsg = {};\nnewMsg.payload = flow.get(\"loginName\");\nnewMsg.ad_attributes =\n{\n    \"user\": [\n        \"userPrincipalName\",\n        \"flags\",\n        \"mail\",\n        \"memberOf\"\n    ]\n};\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":420,"wires":[["3f6ed85d48c43435"]]},{"id":"3d8b75c27c7afc59","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{"Connection-Timeout":"\"Connection-Timeout\" \":\" 240"},"x":480,"y":500,"wires":[]},{"id":"f2e80b8d53aee135","type":"function","z":"03cd6ad3a1606b21","name":"AD Login","func":"//Set state tracking flow variables to default values\nflow.set(\"Resident\",\"Not Selected\");  //Specifies whether the resident type is Private or Affordable based on AD group\nflow.set(\"existingDPSK\",false); //Specifies whether the user has an exisitng DPSK\nflow.set(\"existingDPSKaction\", \"none\"); //Specifies what action to take if an existing DPSK\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = {};\nnewMsg.payload = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nconst LDAP = global.get('ldapjs');\n\n//IMPORTANT: You should be using secure LDAPS, not clear text LDAP//\n//This will require some additonal configuration which can be found in the node docs\nvar client = LDAP.createClient({ url: 'LDAP://AD server IP:port' });\n\n// IMPORTANT: NEVER ALLOW A BLANK PASSWORD to be used as some LDAP providers will \n// not return an error, but bind anonymously, returning 'success' which would\n// be wrongly interpreted as the user having authenticated.\n\nflow.set(\"loginName\", msg.payload.loginname);\n\n// Bind to the AD Server to test the user's credentials...\n//\nclient.bind(msg.payload.loginname, msg.payload.password, function(err) \n//client.bind(loginName, password, function(err) \n{ \n    if (err)\n    {\n\t//Authentication failed - send out of Output 2\n\tnode.send([null,newMsg])\n\t    }\n\telse\n\t{\n\t//Authenticated - send out of Output 1\n\tnode.send([newMsg,null])\n\t}\n    return;\n});\n\n\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":440,"wires":[["7c517738d1e44eb9"],["07467e181a66746b"]],"outputLabels":["Authentication Success","Authentication Fail"]},{"id":"3f6ed85d48c43435","type":"find-user","z":"03cd6ad3a1606b21","name":"Get AD User Details","url":"","baseDN":"","x":880,"y":420,"wires":[["5e9b6cd6518cbf65"]]},{"id":"f7cd28ee5fb25856","type":"comment","z":"03cd6ad3a1606b21","name":"**Set initial parameters and get Cloudapth API service token**","info":"","x":260,"y":60,"wires":[]},{"id":"33741f4777bcad74","type":"comment","z":"03cd6ad3a1606b21","name":"AD Login, Query Users properties & Check if User has existing DPSK","info":"","x":290,"y":300,"wires":[]},{"id":"07467e181a66746b","type":"template","z":"03cd6ad3a1606b21","name":"Login Failed","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style>\nh1 {font-family: \"Arial\";font-size: 23px;font-weight: bold;}\n.button {font-family: \"Arial\";align: left; font-size: 15px;font-weight: bold;}\n</style>\n</head>\n    <h1>Login Failed - Click OK to try again...</h1>\n    <br>\n    <a href=\"http://194.60.94.30:1880/Login\">\n\t<button class=\"button\">OK</button>\n\n</html>","output":"str","x":310,"y":500,"wires":[["3d8b75c27c7afc59"]]},{"id":"692265aed1db7628","type":"comment","z":"03cd6ad3a1606b21","name":"Service selection form for Create or Update DPSK ","info":"","x":230,"y":940,"wires":[]},{"id":"5e9b6cd6518cbf65","type":"function","z":"03cd6ad3a1606b21","name":"Private or Affordable Resident?","func":"//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = {};\nnewMsg.payload = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\n//Set flow variable to be the users E-Mail address from AD user profile\nflow.set(\"userEmail\", msg.payload.mail);\n\n//Set Users VLAN to be the value of the AD users profile attribute \"flags\" \nflow.set(\"vlan\", msg.payload.flags);\n\n//Check if User Group membership contains private-residents affordable-residents\n//Depending on which Group will provide different billing options\nvar baseStr = msg.payload.memberOf\nvar str = new RegExp(baseStr, \"g\");\n\nif (/CN=private-residents,/.test(str)) {\n    flow.set(\"Resident\",\"Private\");\n    return [newMsg,null];\n}\n\n//if (msg.payload.memberOf.hasOwnProperty(\"affordable-residents\")) {\nif (/CN=affordable-residents,/.test(str)) {\n    flow.set(\"Resident\",\"Affordable\");\n    return [newMsg,null];\n}\n\n//No match for Private or Affordable Residents Group for the user\n//Should also put a check in for both Groups being returned and throw an error\nreturn [null,newMsg];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":500,"wires":[["2426ca0f32f944c9"],["bee622382fee76b2"]],"outputLabels":["Resident Group Match","NO Resident Group Match"]},{"id":"2ad161e0bd0e1fa7","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{"Connection-Timeout":"\"Connection-Timeout\" \":\" 240"},"x":820,"y":580,"wires":[]},{"id":"bee622382fee76b2","type":"template","z":"03cd6ad3a1606b21","name":"No Resident Group match","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style>\nh1 {font-family: \"Arial\";font-size: 23px;font-weight: bold;}\n</style>\n</head>\n    <h1>We were unable to verify your Tenant Group membership.</h1>\n    <h1>Please report this error to your Tenant Manager.</h1>\n\n</html>","output":"str","x":590,"y":580,"wires":[["2ad161e0bd0e1fa7"]]},{"id":"1305d4d9c6838fc1","type":"comment","z":"03cd6ad3a1606b21","name":"Create, oe Update, or Replace and Display/EMail the DPSK","info":"","x":260,"y":1240,"wires":[]},{"id":"5f8e4047a1eac3f9","type":"moment","z":"03cd6ad3a1606b21","name":"Add 1 month","topic":"","input":"","inputType":"date","inTz":"Europe/London","adjAmount":"1","adjType":"months","adjDir":"add","format":"","locale":"en-GB","output":"","outputType":"msg","outTz":"Europe/London","x":730,"y":1040,"wires":[["15054c886bfdc44d"]]},{"id":"a98493e5df04c920","type":"moment","z":"03cd6ad3a1606b21","name":"Add 6 months","topic":"","input":"","inputType":"date","inTz":"Europe/London","adjAmount":"6","adjType":"months","adjDir":"add","format":"","locale":"en-GB","output":"","outputType":"msg","outTz":"Europe/London","x":740,"y":1080,"wires":[["15054c886bfdc44d"]]},{"id":"d2b190c089157d3d","type":"moment","z":"03cd6ad3a1606b21","name":"Add 1 year","topic":"","input":"","inputType":"date","inTz":"Europe/London","adjAmount":"1","adjType":"years","adjDir":"add","format":"","locale":"en-GB","output":"","outputType":"msg","outTz":"Europe/London","x":730,"y":1120,"wires":[["15054c886bfdc44d"]]},{"id":"62b0ef28adc3b09c","type":"function","z":"03cd6ad3a1606b21","name":"Create DPSK","func":"//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = {};\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nnewMsg.headers = {};\nnewMsg.headers[\"Content-Type\"]=\"application/json;charset=UTF-8\";\nnewMsg.headers[\"Authorization\"]=flow.get(\"cloudpathToken\");\n\n//Set parameters to Replace an existing DPSK passphrase whilst keeping the same service as before\nif (flow.get(\"existingDPSKaction\") === \"replace\") {\nnewMsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/dpskPools/\"+flow.get(\"cloudpathDpskPool\")+\"/dpsks/\");\nnewMsg.payload = {\n    \"name\":flow.get(\"serviceLevel\"),\n    \"thirdPartyId\":flow.get(\"userEmail\"),\n    \"status\":\"ACTIVE\",\n    \"passphrase\":\"\", //Create a new DPSK to Replace the current one\n    \"ssidList\":[flow.get(\"wifiNetwork\")],\n    \"expirationDateTime\":flow.get(\"dpskExpiry\"),\n    \"useExpirationDate\": true,\n    \"useDeviceCountLimit\":false,\n    \"vlanid\":flow.get(\"vlan\"),\n    \"overrideReauthentication\":86400\n    }\nreturn [newMsg,null,null]; //Send parameters for http POST operation\n}\n\n//Set parameters to Update the service on an existing DPSK & retain the same DPSK passphrase\nif (flow.get(\"existingDPSKaction\") === \"update\") {\nnewMsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/dpskPools/\"+flow.get(\"cloudpathDpskPool\")+\"/dpsks/\"+flow.get(\"dpskGuid\")+\"\");\nnewMsg.payload = {\n    \"guid\":flow.get(\"dpskGuid\"),\n    \"name\":flow.get(\"serviceLevel\"),\n    \"thirdPartyId\":flow.get(\"userEmail\"),\n    \"status\":\"ACTIVE\",\n    \"passphrase\":flow.get(\"dpskPassphrase\"), //Update the DPSK with same passhphrase as before\n    \"ssidList\":[flow.get(\"wifiNetwork\")],\n    \"expirationDateTime\":flow.get(\"dpskExpiry\"),\n    \"useExpirationDate\": true,\n    \"useDeviceCountLimit\":false,\n    \"vlanid\":flow.get(\"vlan\"),\n    \"overrideReauthentication\":86400\n    }\nreturn [null,newMsg,null]; //Send parameters for http PUT operation\n}\n\n//If selected action was to Delete the DPSK\nif (flow.get(\"existingDPSKaction\") === \"delete\") {\n    return [null,null, newMsg];    \n}\n","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":1340,"wires":[["3d9ff3e274e70448"],["905730ddd6c4f6a8"],["2bb401c1a4d11efe"]],"outputLabels":["Send parameters for DPSK passphrase Replacement to http POST","Send parameters for DPSK services Update to http PUT","DPSK Deleted"]},{"id":"42a150fce2a51bf3","type":"function","z":"03cd6ad3a1606b21","name":"Delete DPSK","func":"//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = {};\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nnewMsg.headers = {};\nnewMsg.headers[\"Content-Type\"]=\"application/json;charset=UTF-8\";\nnewMsg.headers[\"Authorization\"]=flow.get(\"cloudpathToken\");\n\nnewMsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/dpskPools/\"+flow.get(\"cloudpathDpskPool\")+\"/dpsks/\"+flow.get(\"dpskGuid\")+\"\");\n\nnewMsg.payload = {};\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":1340,"wires":[["4a2b5326a9670d84"]]},{"id":"4a2b5326a9670d84","type":"http request","z":"03cd6ad3a1606b21","name":"http DELETE","method":"DELETE","ret":"obj","paytoqs":"ignore","url":"","tls":"d8d96dbf.ae322","persist":false,"proxy":"","authType":"","x":750,"y":1340,"wires":[["62b0ef28adc3b09c"]]},{"id":"97ecc8e479920526","type":"comment","z":"03cd6ad3a1606b21","name":"Daily check @ 00:01 for expiring DPSK (14 days left) and tenant notification via EMail","info":"","x":330,"y":1520,"wires":[]},{"id":"e2e5ebdba870c56b","type":"moment","z":"03cd6ad3a1606b21","name":"Format Date","topic":"","input":"dpskExpiry","inputType":"flow","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"dddd, Do MMMM YYYY [at] 00:01","locale":"en-GB","output":"currExpiry","outputType":"flow","outTz":"Europe/London","x":1230,"y":560,"wires":[["f0714978347c9356"]]},{"id":"f9a6753198e6bcbd","type":"moment","z":"03cd6ad3a1606b21","name":"Format Date","topic":"","input":"dpskExpiry","inputType":"flow","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"dddd, Do MMMM YYYY [at] 00:01","locale":"en-GB","output":"readableExpiryDate","outputType":"flow","outTz":"Europe/London","x":1330,"y":1260,"wires":[["2bb401c1a4d11efe"]]},{"id":"6703b787e3089664","type":"function","z":"03cd6ad3a1606b21","name":"Send E-Mail","func":"var Settings=flow.get(\"Settings\");\n\nif (typeof msg.payload == \"undefined\"){\n    return;\n}\n\nnewMsg = {};\n\n//Check whether the message has come from DPSK Expiration check or Create/Update/Replace\nif (typeof msg.userEmail != \"undefined\"){ //If message is from Expiration check then use msg.userEmail as the To: value\n    newMsg.to = msg.userEmail;\n    }\n        else {\n            newMsg.to = flow.get(\"userEmail\"); //Else message has come from DPSK Create, Update or Replace so use the flow variable userEmail instead as the To: value\n}\n    \nnewMsg.from = Settings.EMAIL.EMAILfrom;\nnewMsg.topic = msg.topic;\nnewMsg.payload = msg.payload;\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1590,"y":1480,"wires":[["e47456aedc28a40e"]],"outputLabels":["Send Alert EMail"]},{"id":"e47456aedc28a40e","type":"e-mail","z":"03cd6ad3a1606b21","server":"","port":"465","secure":true,"tls":true,"name":"","dname":"EMail","x":1830,"y":1480,"wires":[]},{"id":"bb9507caf8a6047a","type":"qrcode-generator","z":"03cd6ad3a1606b21","name":"","qrtype":"wifi2qr","text2qrText":"","ssid":"","hiddenssid":false,"wifitype":"WPA","phonenum":"","smsphonenum":"","smstext":"","mailto":"","mailsubject":"","mailbody":"","latitude":"","longitude":"","colorlight":"#ffffff","colordark":"#000000","printstatus":false,"x":1150,"y":1260,"wires":[["f9a6753198e6bcbd"]]},{"id":"15054c886bfdc44d","type":"function","z":"03cd6ad3a1606b21","name":"Save DPSK expiry","func":"//Save the expiry date of the DPSK based on term selected\nflow.set(\"dpskExpiry\", msg.payload);\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nnewMsg = {};\nnewMsg.payload = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":1080,"wires":[["d71a4be8e4e9cf79"]]},{"id":"f0714978347c9356","type":"http response","z":"03cd6ad3a1606b21","name":"redirect to Exisitng DPSK","statusCode":"301","headers":{"location":"http://194.60.94.30:1880/ExistingDPSK"},"x":1450,"y":560,"wires":[]},{"id":"79ec60a25eef8527","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/ExistingDPSK","method":"get","upload":false,"swaggerDoc":"","x":130,"y":680,"wires":[["c6bd3e19b092500f"]]},{"id":"cb7c2387a901c522","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/UpdateDPSK","method":"post","upload":false,"swaggerDoc":"","x":130,"y":720,"wires":[["76c8bce5a683e189"]]},{"id":"a440345bfbe61c0d","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{},"x":640,"y":680,"wires":[]},{"id":"db0b19aba779595f","type":"comment","z":"03cd6ad3a1606b21","name":"Options if a DPSK already exists (Update service, Delete DPSK, Update DPSK passphrase)","info":"","x":350,"y":640,"wires":[]},{"id":"8eef0646d0833826","type":"http response","z":"03cd6ad3a1606b21","name":"redirect to Service Level Form","statusCode":"301","headers":{"location":"http://194.60.94.30:1880/serviceLevelForm"},"x":1430,"y":620,"wires":[]},{"id":"e301752007300fd4","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{},"x":1500,"y":1080,"wires":[]},{"id":"76b7e88872188c86","type":"comment","z":"03cd6ad3a1606b21","name":"**Notes on EMail config**","info":"To send emails to GMAIL SMTP proxy use your GMAIL EMail account and go to your Google account -> Security -> Signing in to Google -> App Passwords and generate a password there.\nMight be differnet process for other mail SMTP proxies.","x":1770,"y":1520,"wires":[]},{"id":"af66e76ae84e99bd","type":"comment","z":"03cd6ad3a1606b21","name":"**Set Service Costs here**","info":"","x":410,"y":1100,"wires":[]},{"id":"76c8bce5a683e189","type":"function","z":"03cd6ad3a1606b21","name":"Set DPSK Action = update","func":"flow.set(\"existingDPSKaction\", \"update\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":720,"wires":[["ba16f85db05293f2"]]},{"id":"a0e2dce19a6c47a4","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/ReplaceDPSK","method":"post","upload":false,"swaggerDoc":"","x":140,"y":840,"wires":[["5ff61b9d71f4ceed"]]},{"id":"ba16f85db05293f2","type":"http response","z":"03cd6ad3a1606b21","name":"Redirect to Service Level Form","statusCode":"301","headers":{"location":"http://194.60.94.30:1880/serviceLevelForm"},"x":710,"y":720,"wires":[]},{"id":"0abc079539b3f8fe","type":"function","z":"03cd6ad3a1606b21","name":"Check DPSK Type","func":"//Check on DPSK action to take: Create a new DPSK (no current Active DPSK), Update current DPSK or Replace current DPSK)\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\n//Create a new DPSK (no existing DPSK)\nif (flow.get(\"existingDPSKaction\") === \"create\") {\n    return [newMsg,null,null];    \n}\n\n//Update existing DPSK service\nif (flow.get(\"existingDPSKaction\") === \"update\") {\n    return [null,newMsg,null];    \n}\n\n//Replace existing DPSK passphrase\nif (flow.get(\"existingDPSKaction\") === \"replace\") {\n    return [null,null,newMsg];    \n}\n\n//Replace existing DPSK passphrase\nif (flow.get(\"existingDPSKaction\") === \"delete\") {\n    return [null,null,newMsg];    \n}","outputs":3,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":1300,"wires":[["90918c5ab2ce7b62"],["62b0ef28adc3b09c"],["42a150fce2a51bf3"]],"outputLabels":["Create a new DPSK","Update existing DPSK service","Replace an existing DPSK passphrase"]},{"id":"2bb401c1a4d11efe","type":"function","z":"03cd6ad3a1606b21","name":"Check DPSK Action & Format Notifications","func":"//Setup browser confirmation messages & notification EMail depending on whether New, Updated, Refreshed, Deleted or Expiring DPSK\n\n//Save QR code if the message is from any flow apart from daily expiration check\nif (msg.dpskExpiring != true) {\n    flow.set(\"qrCode\", msg.payload);\n}\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nvar newMsg = {}\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\n//If new DPSK is Created\nif (flow.get(\"existingDPSKaction\") === \"create\") {\n    flow.set(\"existingDPSKaction\", \"none\"); //Reset DPSK Action variable (Action options are create, update and refresh)\n    //Format DPSK Created display message & send to browser\n    newMsg.payload = \"<!DOCTYPE html><html lang='en'><head><meta name='description' content='Tenant Wi-Fi Access Portal'><meta name='author' content='Eddie Felmer'><meta name='viewport' content='width=device-width, initial-scale=1.0'><title>Tenant Wi-Fi Access Portal</title><style>h1 {font-family: 'Arial';font-size: 23px;font-weight: bold;}h2 {font-family: 'Arial';font-size: 18px;font-weight: normal;}</style></head><body><h1>Your Wi-Fi Network Access Key</h1><h2>Registered to: <B>\"+flow.get(\"userEmail\")+\"</B></h2><h2>Service:<B> \"+flow.get(\"currServiceLevel\")+\"</B></h2><h2>Term:<B> \"+flow.get(\"term\")+\"</B></h2><h2>Valid until:<B> \"+flow.get(\"readableExpiryDate\")+\"</B></h2><br><h2>Your Wi-Fi network access key (passphrase) is:<B><font color = red> \"+flow.get(\"dpskPassphrase\")+\"</font color></B></h2><h2>Use the access key to connect your devices to the Wi-Fi network <B>\"+flow.get(\"wifiNetwork\")+\"</B></h2><h2>You can scan the QR code to automatically connect Android v9+ and iOS v11+ devices using your Wi-Fi Access Key.</h2><h2>It will also be emailed to you with the service confirmation and you can forward/print it out.</h2> <img src='\"+flow.get(\"qrCode\")+\"'/><BR><h2>If you forget the access key then please contact your Tenant manager.</h2><h2>After noting the key you may close this browser window.</h2></body></html>\";\n    node.send([newMsg,null]);\n    node.done();\n    //Format DPSK Created EMail & send\n    newMsg.topic = \"A new Wi-Fi Access Key (passphrase) has been Created\";\n    newMsg.payload = \"<font size = 3>A new Wi-Fi Access Key has been created for the Wi-Fi network <B>\"+flow.get(\"wifiNetwork\")+\"</B><BR><BR>The Access Key is <font color=red><B>\"+flow.get(\"dpskPassphrase\")+\"</B></font color> and is registered to this recipients E-Mail address.<BR><BR>Service details:<BR>The service level is: <B>\"+flow.get(\"currServiceLevel\")+\"</B><BR>The service term duration is <B>\"+flow.get(\"term\")+\"</B> and the Access Key is valid until <B>\"+flow.get(\"readableExpiryDate\")+\"</B><BR><BR>Note this key and use it to connect your devices to the Wi-Fi network.<BR>You can scan the QR code to automatically connect Android v9+ and iOS v11+ devices using your Wi-Fi Access Key. <BR>You may also print this email with the QR code, code or right-click and Save as an image for distribution.<BR><img src=\"+msg.payload+\" alt='qr code'/><BR>If you lose the Access Key then please contact your Tenant Manager.\";\n    return [null,newMsg];\n}\n\n//If existing DPSK service level is Updated\nif (flow.get(\"existingDPSKaction\") === \"update\") {\n    flow.set(\"existingDPSKaction\", \"none\"); //Reset DPSK Action variable (Action options are create, update and refresh)\n    //Format DPSK service Updated display message & send to browser\n    newMsg.payload = \"<!DOCTYPE html><html lang='en'><head><meta name='description' content='Tenant Wi-Fi Access Portal'><meta name='author' content='Eddie Felmer'><meta name='viewport' content='width=device-width, initial-scale=1.0'><title>Tenant Wi-Fi Access Portal</title><style>h1 {font-family: 'Arial';font-size: 23px;font-weight: bold;}h2 {font-family: 'Arial';font-size: 18px;font-weight: normal;}</style></head><body><h1>Your Wi-Fi Service subscription is Updated</h1><h2>The new service details are:</h2><h2>Registered to: <B>\"+flow.get(\"userEmail\")+\"</B></h2><h2>Service:<B> \"+flow.get(\"currServiceLevel\")+\"</B></h2><h2>Term:<B> \"+flow.get(\"term\")+\"</B></h2><h2>Valid until:<B> \"+flow.get(\"readableExpiryDate\")+\"</B></h2><br><h2>The updated service uses the same Wi-Fi network Access Key (passphrase) as before:<B><font color = red> \"+flow.get(\"dpskPassphrase\")+\"</font color></B></h2><h2>You may need to disable and re-enable Wi-Fi on your existing devices to have them re-connect to the <B>\"+flow.get(\"wifiNetwork\")+\"</B> Wi-Fi network.</B><h2>Use the same access key to connect new devices to the Wi-Fi network.</h2><br><h2>You can scan the QR code to automatically connect Android v9+ and iOS v11+ devices using your Wi-Fi Access Key.</h2><h2>It will also be emailed to you with the service confirmation and you can forward/print it out.</h2> <img src='\"+flow.get(\"qrCode\")+\"'/><BR><h2>If you forget the access key then please contact your Tenant manager.</h2><h2>After noting the key you may close this browser window.</h2></body></html>\";\n    node.send([newMsg,null]);\n    node.done();\n    //Format DPSK service Updated EMail & send\n    newMsg.topic = \"Your Wi-Fi Service subscription has been Updated\";\n    newMsg.payload = \"<font size = 3>The Service subscription associated with the Wi-Fi Access Key (passphrase) <font color=red><B>\"+flow.get(\"dpskPassphrase\")+\"</font color></B> has been updated for the Wi-Fi network <B>\"+flow.get(\"wifiNetwork\")+\"</B><BR>You may need to disable and re-enable Wi-Fi on your existing devices to have them re-connect to this Wi-Fi Network.<BR>Use the same Access Key to connect new devices to the Wi-Fi network.<BR><BR>The Access Key is registered to this recipients E-Mail address.<BR><BR>Updated Service details:<BR>The Service level is: <B>\"+flow.get(\"currServiceLevel\")+\"</B><BR>The Service term duration is <B>\"+flow.get(\"term\")+\"</B> and the Access Key is valid until <B>\"+flow.get(\"readableExpiryDate\")+\"</B><BR><BR>You can scan the QR code to automatically connect Android v9+ and iOS v11+ devices using your Wi-Fi Access Key. <BR>You may also print this email with the QR code, code or right-click and Save as an image for distribution.<BR><img src=\"+msg.payload+\" alt='qr code'/><BR>If you lose the Access Key then please contact your Tenant Manager.\";\n    return [null,newMsg];    \n}\n\n//If existing DPSK passphrase is Replaced (retaining current service level)\nif (flow.get(\"existingDPSKaction\") === \"replace\") {\n    flow.set(\"existingDPSKaction\", \"none\"); //Reset DPSK Action variable (Action options are create, update and refresh)\n    //Format DPSK passphrase Replaced display message & send to browser\n    newMsg.payload = \"<!DOCTYPE html><html lang='en'><head><meta name='description' content='Tenant Wi-Fi Access Portal'><meta name='author' content='Eddie Felmer'><meta name='viewport' content='width=device-width, initial-scale=1.0'><title>Tenant Wi-Fi Access Portal</title><style>h1 {font-family: 'Arial';font-size: 23px;font-weight: bold;}h2 {font-family: 'Arial';font-size: 18px;font-weight: normal;}</style></head><body><h1>Your Wi-Fi Access Key has been Replaced</h1><h2>The service details remain the same:</h2><h2>Registered to: <B>\"+flow.get(\"userEmail\")+\"</B></h2><h2>Service:<B> \"+flow.get(\"currServiceLevel\")+\"</B></h2><h2>Valid until:<B> \"+flow.get(\"readableExpiryDate\")+\"</B></h2><br><h2>Your new Wi-Fi network Access Key (passphrase) is:<B><font color = red> \"+flow.get(\"dpskPassphrase\")+\"</font color></B></h2><h2>You will need to re-connect all existing devices using this new Access Key to the Wi-Fi network <B>\"+flow.get(\"wifiNetwork\")+\"</B></h2><h2>You can scan the QR code to automatically connect Android v9+ and iOS v11+ devices using your Wi-Fi Access Key.</h2><h2>It will also be emailed to you with the service confirmation and you can forward/print it out.</h2> <img src='\"+flow.get(\"qrCode\")+\"'/><BR><h2>If you forget the access key then please contact your Tenant manager.</h2><h2>After noting the key you may close this browser window.</h2></body></html>\";\n    node.send([newMsg,null]);\n    node.done();\n    //Format DPSK passphrase Replaced EMail & send\n    newMsg.topic = \"Your Wi-Fi Access Key (passphrase) has been Replaced\";\n    newMsg.payload = \"<font size = 3>Your Wi-Fi Access Key for the Wi-Fi network <B>\"+flow.get(\"wifiNetwork\")+\"</B> has been Replaced.<BR><BR>The new Access Key is <font color=red><B>\"+flow.get(\"dpskPassphrase\")+\"</B></font color> and is registered to this recipients E-Mail address.<BR><BR>The service details remain the same:<BR>The service level is: <B>\"+flow.get(\"currServiceLevel\")+\"</B><BR>The Access Key is valid until <B>\"+flow.get(\"readableExpiryDate\")+\"</B><BR><BR>You will need to re-connect all existing devices using this new Access Key to the Wi-Fi network <B>\"+flow.get(\"wifiNetwork\")+\"</B><BR>You can scan the QR code to automatically connect Android v9+ and iOS v11+ devices using your Wi-Fi Access Key. <BR>You may also print this email with the QR code, code or right-click and Save as an image for distribution.<BR><img src=\"+msg.payload+\" alt='qr code'/><BR>If you lose the Access Key then please contact your Tenant Manager.\";\n    return [null,newMsg]; \n}\n\n//If existing DPSK is Deleted\nif (flow.get(\"existingDPSKaction\") === \"delete\") {\n    flow.set(\"existingDPSKaction\", \"none\"); //Reset DPSK Action variable (Action options are create, update and refresh)\n    //Format DPSK Deleted display message & send to browser\n    newMsg.payload = \"<!DOCTYPE html><html lang='en'><head><meta name='description' content='Tenant Wi-Fi Access Portal'><meta name='author' content='Eddie Felmer'><meta name='viewport' content='width=device-width, initial-scale=1.0'><title>Tenant Wi-Fi Access Portal</title><style>h1 {font-family: 'Arial';font-size: 23px;font-weight: bold;}h2 {font-family: 'Arial';font-size: 18px;font-weight: normal;}</style></head><body><h1>Your Wi-Fi Access Key is Deleted</h1><h2>Your Wi-Fi Access Key (passphrase) <B><font color = red> \"+flow.get(\"dpskPassphrase\")+\"</font color></B> has been Deleted and your Wi-Fi service service has been terminated.<h2>If you wish to use the <B>\"+flow.get(\"wifiNetwork\")+\"</B> Wi-Fi network.</B> again you will need to purchase a new service subscription.</h2><br><h2>Contact your Tenant Manager in the case you deleted the Access Key in error.</h2><br><h2>You may close this browser window.</h2></body></html>\";\n    node.send([newMsg,null]);\n    node.done();\n    //Format DPSK Deleted EMail & send\n    newMsg.topic = \"Your Wi-Fi Access Key has been Deleted\";\n    newMsg.payload = \"<font size = 3>Your Wi-Fi Access Key (passphrase) <font color=red><B>\"+flow.get(\"dpskPassphrase\")+\"</font color></B> has been Deleted and your Wi-Fi service subscription has been terminated.<br><br>If you wish to use the <B>\"+flow.get(\"wifiNetwork\")+\"</B> Wi-Fi network</B> again you will need to purchase a new service subscription.<br><br>Contact your Tenant Manager in the case you deleted the Access Key in error.\";\n    return [null,newMsg];    \n}\n\n//If DPSK is Expiring soon based on # of days left threshold then format EMail Notification & send\nif (msg.dpskExpiring === true) {\n    newMsg.to = msg.userEmail;\n    newMsg.dpskExpiring = true;\n    newMsg.userEmail = msg.userEmail;\n    newMsg.topic = \"Your Wi-Fi Access Key (passphrase) is due to Expire\";\n    newMsg.payload = \"<font size = 3>Your Wi-Fi Access Key <B>\"+msg.payload.dpskPassphrase+\"</B> for the Wi-Fi network <B>\"+flow.get(\"wifiNetwork\")+\"</B> will expire in 2 weeks time.<BR><BR>The Access Key is valid until <B>\"+flow.get(\"readableExpiryDate\")+\"</B><BR><BR>Your current Service is: <B>\"+msg.payload.currServiceLevel+\"</B><BR><BR>Please renew your Access Key service before it expires for uninterrupted Wi-Fi service by clicking the link below:<br><a href='http://194.60.94.30:1880/Login'>Login to the Tenant Wi-Fi Access Portal</a>\";\n    return [null,newMsg]; \n    }\nreturn;","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":1440,"wires":[["3f3ecdb79214ec32"],["6703b787e3089664"]],"outputLabels":["Send confirmation to browser","Send confirmation via Email"]},{"id":"e776722b33749333","type":"comment","z":"03cd6ad3a1606b21","name":"Update / Replace DPSK path (can't replace a passhprase, have to delete/re-create DPSK)","info":"","x":810,"y":1380,"wires":[]},{"id":"638485c1bbc7df83","type":"comment","z":"03cd6ad3a1606b21","name":"New DPSK path","info":"","x":580,"y":1220,"wires":[]},{"id":"ea0ef6eecf491084","type":"http response","z":"03cd6ad3a1606b21","name":"Redirect to Create DPSK to Delete the DPSK","statusCode":"301","headers":{"location":"http://194.60.94.30:1880/CreateDPSK"},"x":470,"y":880,"wires":[]},{"id":"905730ddd6c4f6a8","type":"http request","z":"03cd6ad3a1606b21","name":"http PUT","method":"PUT","ret":"obj","paytoqs":"ignore","url":"","tls":"d8d96dbf.ae322","persist":false,"proxy":"","authType":"","x":1160,"y":1340,"wires":[["19df842a0c965e19"]]},{"id":"5ff61b9d71f4ceed","type":"template","z":"03cd6ad3a1606b21","name":"Confirm DPSK Replace","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!-- Give option to replace or update service on existing DPSK-->\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style>\nh1 {font-family: \"Arial\";font-size: 23px;font-weight: bold;}\nh2 {font-family: \"Arial\";font-size: 18px;font-weight: normal;}\n.button {font-family: \"Arial\";align: center; font-size: 15px; font-weight: bold; margin: 0px 20px; display: inline-block;}\n</style>\n\n</head>\n<body>\n    <h2>Are you sure you wish to replace your current Wi-Fi Access Key (passphrase) <b><font color=red>{{flow.dpskPassphrase}}</font color></b> with a new one?</h2>\n    <h2>If you <b>CONFIRM</b>, then you will need to re-connect all your devices using the new Access Key</h2>\n    <h2>Your service level will remain unchanged.</h2>\n    <h2>If you do not wish to proceed, either click the browser Back button, or close this browser window.</h2>\n    <br>\n    <form =\"form\" action=\"http://194.60.94.30:1880/ConfirmedReplace?\" method=\"post\">\n    <input type=\"submit\" class=\"button\" value=\"CONFIRM\" />\n</form>\n</body>\n</html>","output":"str","x":410,"y":840,"wires":[["3f5e0fed966bb9d1"]]},{"id":"cc3d44a4f13cc897","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/ConfirmedReplace","method":"post","upload":false,"swaggerDoc":"","x":150,"y":880,"wires":[["ea0ef6eecf491084"]]},{"id":"3f5e0fed966bb9d1","type":"function","z":"03cd6ad3a1606b21","name":"Set DPSK Action = replace","func":"flow.set(\"existingDPSKaction\", \"replace\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":840,"wires":[["186cceb0a1364241"]]},{"id":"186cceb0a1364241","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{},"x":920,"y":840,"wires":[]},{"id":"49c3cac007289b90","type":"comment","z":"03cd6ad3a1606b21","name":"**Set AD Bind details & user here**","info":"The user needs to have permissions to query users attributes","x":880,"y":380,"wires":[]},{"id":"2f4689611987fe14","type":"comment","z":"03cd6ad3a1606b21","name":"**Set AD Server URL here**","info":"","x":320,"y":400,"wires":[]},{"id":"3a754b3daf3c930b","type":"inject","z":"03cd6ad3a1606b21","name":"Refresh","props":[],"repeat":"240","crontab":"","once":false,"onceDelay":"5","topic":"","payloadType":"str","x":120,"y":200,"wires":[["e1e117a64d71f821"]]},{"id":"3a14b2ad4184fb3e","type":"http request","z":"03cd6ad3a1606b21","name":"https POST","method":"PUT","ret":"obj","paytoqs":"ignore","url":"","tls":"d8d96dbf.ae322","persist":false,"proxy":"","authType":"","x":690,"y":200,"wires":[["22ec0476e3cc7e35"]]},{"id":"e1e117a64d71f821","type":"function","z":"03cd6ad3a1606b21","name":"Get current API token and Refresh","func":"//Get a new service token\nmsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/token\");\n\nmsg.headers = {};\nmsg.headers[\"Content-Type\"]=\"application/json;charset=UTF-8\";\nmsg.headers[\"Authorization\"]=flow.get(\"cloudpathToken\");\n\nmsg.payload = {};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":200,"wires":[["3a14b2ad4184fb3e"]]},{"id":"22ec0476e3cc7e35","type":"function","z":"03cd6ad3a1606b21","name":"Save Refrshed Token","func":"var responseCode = msg.statusCode\n\n//Check that Cloudpath HTTP connection and login was succesful\n//If not send debug warning to console and debug\nif (responseCode != 200) {\n    node.warn([\"Expected HTTP response code 200 from Cloudpath, instead it received HTTP response code:\", responseCode]);\nreturn;\n}\n\nelse {\n    flow.set(\"cloudpathToken\", msg.payload.token);\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":200,"wires":[[]]},{"id":"a9fe88a924f8dc2b","type":"comment","z":"03cd6ad3a1606b21","name":"Refresh Cloudapth API service token","info":"","x":180,"y":160,"wires":[]},{"id":"0ac00988271fce7e","type":"comment","z":"03cd6ad3a1606b21","name":"To do: routine to check for DPSK that are due to expire","info":"","x":800,"y":140,"wires":[]},{"id":"caf09d9893f7eef5","type":"function","z":"03cd6ad3a1606b21","name":"Check for expiring DPSK & send EMail notification","func":"//Check that Cloudpath HTTP request was succesful\n//If not send debug warning to console and debug\nvar responseCode = msg.statusCode\nif (responseCode != 200) {\n    node.warn([\"Expected HTTP response code 200 from Cloudpath, instead it received HTTP response code:\", responseCode]);\nreturn;\n}\n\n//create newMsg & initialise variables\nvar datefromDPSKexpiry = \"\";\nvar microSecondsDiff = \"\";\nvar daysDiff = \"\";\nvar todaysDateTimeStamp = new Date(flow.get(\"todaysDate\")).getTime();\n\n//Set totalCount to number of Active DPSK received in the array\nvar totalCount = msg.payload.page.totalCount;\n\n//Loop through the received DPSK array and check expiration = 14 days (configured in line 32)\n//If it is then format and forward parameters for E-Mail notification to be created\n    for(counter = 0; counter < (totalCount); counter++) {\n    datefromDPSKexpiry = new Date(new Date(msg.payload.contents[counter].expirationDateTime)).getTime();\n    microSecondsDiff = Math.abs(datefromDPSKexpiry - todaysDateTimeStamp);\n    // Math.round is used instead of Math.floor to account for certain DST cases\n    // Number of milliseconds per day = 24 hrs/day * 60 minutes/hour * 60 seconds/minute * 1000 ms/second\n    daysDiff = Math.round(microSecondsDiff / (1000 * 60 * 60  * 24));\n\n    //Check if the current DPSK being checked in the received DPSK array will expire in 14 days\n    //If it does then send prepare parameters for E-Mail notification\n    //Note that can't set flow variables with parameters to be used by subsequent nodes as they get overwritten with the last one in the array.\n    //So instead I am using msg variables to pass data to the next node\n   \n    if (daysDiff === 14) { //How many days from today do you want to notify that DPSK is due to expire?\n        \t\n        \t//Check what the DPSK service level is set to and change it to readable format\n        \tvar baseStr = msg.payload.contents[counter].name\n            var str = new RegExp(baseStr, \"g\");\n                if (/-BRONZE/.test(str)) {\n                    flow.set(\"currServiceLevel\", \"Browsing, E-Mail & Standard video quality\");\n            }\n                if (/-SILVER/.test(str)) {\n                    flow.set(\"currServiceLevel\", \"Browsing, E-Mail & HD video quality\");\n            }\n                if (/-GOLD/.test(str)) {\n                    flow.set(\"currServiceLevel\", \"Uncapped service\");\n            }\n        \n        let newMsg = {};\n        newMsg.dpskExpiring = true;\n        newMsg.userEmail = msg.payload.contents[counter].thirdPartyId\n        newMsg.payload = {\n        \"dpskPassphrase\": msg.payload.contents[counter].passphrase,\n        \"dpskExpiry\": msg.payload.contents[counter].expirationDateTime,\n        \"currServiceLevel\": flow.get(\"currServiceLevel\")\n        }\n                node.send(newMsg);\n        node.done();        \n    }\n}\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":1560,"wires":[["198e765b34aaeb25"]],"outputLabels":["Existing Active DPSK Exists"]},{"id":"56c37ba3aaeb2152","type":"function","z":"03cd6ad3a1606b21","name":"Retrieve existing Active DPSKs","func":"//Setup request to retrieve all Active DPSKs\nvar newMsg = {};\nnewMsg.headers = {};\nnewMsg.headers[\"Content-Type\"]=\"application/json;charset=UTF-8\";\nnewMsg.headers[\"Authorization\"]=flow.get(\"cloudpathToken\");\n\n//Set the URL filter to query by the user email address and state = ACTIVE\nnewMsg.url = flow.get(\"cloudpathAddress\").concat(\"/admin/publicApi/dpskPools/\"+flow.get(\"cloudpathDpskPool\")+\"/dpsks/?filter=status(eq:ACTIVE)\");\n\n//create newMsg to include original request and response information else HTTP 200 response doesn't work\nnewMsg.payload = msg.payload;\nnewMsg.req = msg.req;\nnewMsg.res = msg.res;\n\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":1560,"wires":[["d01f7a3c79e5263a"]]},{"id":"d01f7a3c79e5263a","type":"http request","z":"03cd6ad3a1606b21","name":"http GET","method":"GET","ret":"obj","paytoqs":"ignore","url":"","tls":"d8d96dbf.ae322","persist":false,"proxy":"","authType":"","x":760,"y":1560,"wires":[["caf09d9893f7eef5"]]},{"id":"e90859cde28d604d","type":"moment","z":"03cd6ad3a1606b21","name":"Format Date","topic":"","input":"payload","inputType":"msg","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"","locale":"en-GB","output":"todaysDate","outputType":"flow","outTz":"Europe/London","x":290,"y":1560,"wires":[["56c37ba3aaeb2152"]]},{"id":"f0c4462f2572d089","type":"inject","z":"03cd6ad3a1606b21","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"00 01 * * *","once":false,"onceDelay":0.1,"topic":"","payloadType":"date","x":130,"y":1560,"wires":[["e90859cde28d604d"]]},{"id":"c5b66dafec69cc09","type":"comment","z":"03cd6ad3a1606b21","name":"**Set checked expiry date in # of days here**","info":"","x":1050,"y":1520,"wires":[]},{"id":"198e765b34aaeb25","type":"moment","z":"03cd6ad3a1606b21","name":"Format Date","topic":"","input":"payload.dpskExpiry","inputType":"msg","inTz":"Europe/London","adjAmount":0,"adjType":"days","adjDir":"add","format":"dddd, Do MMMM YYYY [at] 00:01","locale":"en-GB","output":"readableExpiryDate","outputType":"flow","outTz":"Europe/London","x":1350,"y":1560,"wires":[["2bb401c1a4d11efe"]]},{"id":"d18ee5fdaa9a4dc3","type":"http response","z":"03cd6ad3a1606b21","name":"","statusCode":"200","headers":{},"x":920,"y":760,"wires":[]},{"id":"773f3862495f78e9","type":"function","z":"03cd6ad3a1606b21","name":"Set DPSK Action = delete","func":"flow.set(\"existingDPSKaction\", \"delete\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":760,"wires":[["d18ee5fdaa9a4dc3"]]},{"id":"d49307cbd57dd2e6","type":"template","z":"03cd6ad3a1606b21","name":"Confirm DPSK Delete","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!-- Give option to replace or update service on existing DPSK-->\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n<meta name=\"description\" content=\"Tenant Wi-Fi Access Portal\">\n<meta name=\"author\" content=\"Eddie Felmer\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<title>Tenant Wi-Fi Access Portal</title>\n<style>\nh1 {font-family: \"Arial\";font-size: 23px;font-weight: bold;}\nh2 {font-family: \"Arial\";font-size: 18px;font-weight: normal;}\n.button {font-family: \"Arial\";align: center; font-size: 15px; font-weight: bold; margin: 0px 20px; display: inline-block;}\n</style>\n\n</head>\n<body>\n    <h2>Are you sure you wish to delete your current Wi-Fi Access Key (passphrase) <b><font color=red>{{flow.dpskPassphrase}}</font color></b> & terminate your service?</h2>\n    <h2>If you <b>CONFIRM</b>, then you will need to purchase a new service plan to access the Tenant Wi-Fi network again</h2>\n    <h2>If you do not wish to proceed, either click the browser Back button, or close this browser window.</h2>\n    <br>\n    <form =\"form\" action=\"http://194.60.94.30:1880/ConfirmedDelete?\" method=\"post\">\n    <input type=\"submit\" class=\"button\" value=\"CONFIRM\" />\n</form>\n</body>\n</html>","output":"str","x":400,"y":760,"wires":[["773f3862495f78e9"]]},{"id":"ceaf069bd6ef1bea","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/DeleteDPSK","method":"post","upload":false,"swaggerDoc":"","x":130,"y":760,"wires":[["d49307cbd57dd2e6"]]},{"id":"9d6609782de6ba0a","type":"http in","z":"03cd6ad3a1606b21","name":"","url":"/ConfirmedDelete","method":"post","upload":false,"swaggerDoc":"","x":140,"y":800,"wires":[["4c1d3f964e5e9352"]]},{"id":"4c1d3f964e5e9352","type":"http response","z":"03cd6ad3a1606b21","name":"Redirect to Create DPSK for Delete","statusCode":"301","headers":{"location":"http://194.60.94.30:1880/CreateDPSK"},"x":440,"y":800,"wires":[]},{"id":"d8d96dbf.ae322","type":"tls-config","name":"","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","verifyservercert":false}]